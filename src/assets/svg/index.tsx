import React from 'react';

const PhoneSvg: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (
  <svg
    height="20"
    width="20"
    version="1.1"
    id="Phone-14"
    xmlns="http://www.w3.org/2000/svg"
    xmlnsXlink="http://www.w3.org/1999/xlink"
    viewBox="0 0 28.314 28.323"
    enableBackground="new 0 0 28.314 28.323"
    fill="white"
    {...props}
  >
    <path
      d="M27.728,20.384l-4.242-4.242c-0.377-0.378-0.879-0.586-1.413-0.586c0,0-0.001,0-0.002,0c-0.534,0-1.036,0.209-1.413,0.586
      l-2.828,2.828l-8.485-8.485l2.828-2.828c0.78-0.78,0.78-2.05-0.001-2.83L7.929,0.585C7.552,0.208,7.05,0,6.516,0H6.515
      C5.98,0,5.478,0.209,5.101,0.587L0.858,4.83C0.729,4.958-0.389,6.168,0.142,8.827c0.626,3.129,3.246,7.019,7.787,11.56
      c6.499,6.499,10.598,7.937,12.953,7.937c1.63,0,2.426-0.689,2.604-0.867l4.242-4.242c0.378-0.378,0.587-0.881,0.586-1.416
      C28.314,21.265,28.106,20.762,27.728,20.384z M22.072,26.042c-0.028,0.028-3.409,2.249-12.729-7.07
      C-0.178,9.452,2.276,6.243,2.272,6.244L6.515,2l4.243,4.244L7.223,9.779c-0.391,0.391-0.391,1.023,0,1.414l9.899,9.899
      c0.391,0.391,1.023,0.391,1.414,0l3.535-3.536l4.243,4.244L22.072,26.042z"
    />
  </svg>
);

const SearchIconSvg: React.FC<React.SVGProps<SVGSVGElement>> = () => (
  <svg
    width="18"
    height="18"
    viewBox="0 0 18 18"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M13.4443 13.4445L16.9999 17"
      stroke="white"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    ></path>
    <path
      d="M15.2222 8.11111C15.2222 12.0385 12.0385 15.2222 8.11111 15.2222C4.18375 15.2222 1 12.0385 1 8.11111C1 4.18375 4.18375 1 8.11111 1C12.0385 1 15.2222 4.18375 15.2222 8.11111Z"
      stroke="white"
      strokeWidth="2"
    ></path>
  </svg>
);

const LogoSvg: React.FC<React.SVGProps<SVGSVGElement>> = () => (
  <svg width="140" height="31" viewBox="0 0 140 31" fill="none" xmlns="http://www.w3.org/2000/svg">
    <rect width="140" height="31" fill="white"/>
    <path d="M32.2891 17C32.0938 17 31.9961 16.8926 31.9961 16.6777V8.91992C31.9961 8.70508 32.0938 8.59766 32.2891 8.59766H34.4512C36.1074 8.59766 37.2578 8.96484 37.9023 9.69922C38.5508 10.4297 38.875 11.459 38.875 12.7871C38.875 14.1152 38.5508 15.1504 37.9023 15.8926C37.2578 16.6309 36.1074 17 34.4512 17H32.2891ZM33.1211 16.0391H34.3984C35.6875 16.0391 36.5547 15.7656 37 15.2188C37.4492 14.6719 37.6738 13.8613 37.6738 12.7871C37.6738 11.7129 37.4492 10.9043 37 10.3613C36.5547 9.81836 35.6875 9.54688 34.3984 9.54688H33.1211V16.0391ZM40.7031 17C40.5078 17 40.4102 16.8926 40.4102 16.6777V8.91992C40.4102 8.70508 40.5078 8.59766 40.7031 8.59766H41.2422C41.4375 8.59766 41.5352 8.70508 41.5352 8.91992V16.6777C41.5352 16.8926 41.4375 17 41.2422 17H40.7031ZM43.0703 12.7988C43.0703 11.4316 43.4082 10.3613 44.084 9.58789C44.7637 8.81055 45.7383 8.42188 47.0078 8.42188C47.75 8.42188 48.3633 8.54883 48.8477 8.80273C49.332 9.05273 49.6797 9.39648 49.8906 9.83398C50 10.0605 49.9824 10.2168 49.8379 10.3027L49.375 10.5723C49.2188 10.6621 49.0801 10.5879 48.959 10.3496C48.8301 10.1035 48.6191 9.87305 48.3262 9.6582C48.0332 9.44336 47.6133 9.33594 47.0664 9.33594C46.0898 9.33594 45.3789 9.64062 44.9336 10.25C44.4922 10.8555 44.2715 11.7051 44.2715 12.7988C44.2715 13.8926 44.4922 14.7441 44.9336 15.3535C45.3789 15.959 46.0898 16.2617 47.0664 16.2617C47.6289 16.2617 48.0781 16.1328 48.4141 15.875C48.7539 15.6172 49 15.3477 49.1523 15.0664C49.2734 14.8398 49.4141 14.7715 49.5742 14.8613L50.0605 15.1367C50.2012 15.2188 50.2129 15.375 50.0957 15.6055C49.8652 16.0547 49.4902 16.4297 48.9707 16.7305C48.4512 17.0273 47.7969 17.1758 47.0078 17.1758C45.7383 17.1758 44.7637 16.7891 44.084 16.0156C43.4082 15.2383 43.0703 14.166 43.0703 12.7988ZM51.2852 12.7988C51.2852 11.4316 51.6211 10.3613 52.293 9.58789C52.9688 8.81055 53.9414 8.42188 55.2109 8.42188C56.4805 8.42188 57.4512 8.81055 58.123 9.58789C58.7988 10.3613 59.1367 11.4316 59.1367 12.7988C59.1367 14.166 58.7988 15.2383 58.123 16.0156C57.4512 16.7891 56.4805 17.1758 55.2109 17.1758C53.9414 17.1758 52.9688 16.7891 52.293 16.0156C51.6211 15.2383 51.2852 14.166 51.2852 12.7988ZM52.4863 12.7988C52.4863 13.8926 52.7109 14.7441 53.1602 15.3535C53.6094 15.959 54.293 16.2617 55.2109 16.2617C56.1289 16.2617 56.8125 15.959 57.2617 15.3535C57.7109 14.7441 57.9355 13.8926 57.9355 12.7988C57.9355 11.7051 57.7109 10.8555 57.2617 10.25C56.8125 9.64062 56.1289 9.33594 55.2109 9.33594C54.293 9.33594 53.6094 9.64062 53.1602 10.25C52.7109 10.8555 52.4863 11.7051 52.4863 12.7988ZM60.9648 17C60.7695 17 60.6719 16.8926 60.6719 16.6777V8.91992C60.6719 8.70508 60.7695 8.59766 60.9648 8.59766H62.2129C62.3613 8.59766 62.4727 8.71484 62.5469 8.94922L64.2227 14.2051C64.3945 14.7441 64.4961 15.0703 64.5273 15.1836C64.5586 15.293 64.6035 15.4961 64.6621 15.793H64.6973C64.7559 15.4961 64.8008 15.293 64.832 15.1836C64.8633 15.0703 64.9648 14.7441 65.1367 14.2051L66.8125 8.94922C66.8867 8.71484 66.998 8.59766 67.1465 8.59766H68.3945C68.5898 8.59766 68.6875 8.70508 68.6875 8.91992V16.6777C68.6875 16.8926 68.5898 17 68.3945 17H67.8555C67.6602 17 67.5625 16.8926 67.5625 16.6777V10.5312C67.5625 10.375 67.5664 10.2188 67.5742 10.0625H67.5508L65.3887 16.6426C65.3105 16.8809 65.1816 17 65.002 17H64.3574C64.1777 17 64.0488 16.8809 63.9707 16.6426L61.8086 10.0625H61.7852C61.793 10.2188 61.7969 10.375 61.7969 10.5312V16.6777C61.7969 16.8926 61.6992 17 61.5039 17H60.9648ZM74.0957 8.98438C73.998 8.72656 74.0508 8.59766 74.2539 8.59766H74.8516C75.0625 8.59766 75.2031 8.69336 75.2734 8.88477L77.1777 14.1289C77.2598 14.3594 77.3613 14.6699 77.4824 15.0605C77.6074 15.4473 77.6914 15.7559 77.7344 15.9863H77.7578C77.8008 15.7559 77.8828 15.4473 78.0039 15.0605C78.1289 14.6699 78.2324 14.3594 78.3145 14.1289L80.2188 8.88477C80.2891 8.69336 80.4297 8.59766 80.6406 8.59766H81.2383C81.4414 8.59766 81.4941 8.72656 81.3965 8.98438L78.543 16.6426C78.4531 16.8809 78.3242 17 78.1562 17H77.3359C77.168 17 77.0391 16.8809 76.9492 16.6426L74.0957 8.98438ZM82.8086 17C82.6133 17 82.5156 16.8926 82.5156 16.6777V8.91992C82.5156 8.70508 82.6133 8.59766 82.8086 8.59766H83.3477C83.543 8.59766 83.6406 8.70508 83.6406 8.91992V16.6777C83.6406 16.8926 83.543 17 83.3477 17H82.8086ZM85.9258 17C85.7305 17 85.6328 16.8926 85.6328 16.6777V8.91992C85.6328 8.70508 85.7305 8.59766 85.9258 8.59766H91.0527C91.2676 8.59766 91.375 8.68555 91.375 8.86133V9.29492C91.375 9.4707 91.2676 9.55859 91.0527 9.55859H86.7578V12.1602H90.7012C90.916 12.1602 91.0234 12.248 91.0234 12.4238V12.8574C91.0234 13.0332 90.916 13.1211 90.7012 13.1211H86.7578V16.0391H91.2285C91.4434 16.0391 91.5508 16.127 91.5508 16.3027V16.7363C91.5508 16.9121 91.4434 17 91.2285 17H85.9258ZM92.4531 8.94922C92.3906 8.71484 92.4414 8.59766 92.6055 8.59766H93.3203C93.4453 8.59766 93.5293 8.6875 93.5723 8.86719L94.8789 14.498C94.9336 14.7246 94.9941 14.9707 95.0605 15.2363C95.1309 15.502 95.1914 15.752 95.2422 15.9863H95.2715C95.3105 15.7559 95.3555 15.5273 95.4062 15.3008C95.4609 15.0742 95.5215 14.8086 95.5879 14.5039L96.9238 8.91406C96.9746 8.70312 97.0996 8.59766 97.2988 8.59766H98.1074C98.3066 8.59766 98.4316 8.70312 98.4824 8.91406L99.8184 14.5039C99.8848 14.8086 99.9434 15.0742 99.9941 15.3008C100.049 15.5273 100.096 15.7559 100.135 15.9863H100.164C100.215 15.752 100.273 15.502 100.34 15.2363C100.41 14.9707 100.473 14.7246 100.527 14.498L101.834 8.86719C101.877 8.6875 101.961 8.59766 102.086 8.59766H102.801C102.965 8.59766 103.016 8.71484 102.953 8.94922L100.938 16.5488C100.859 16.8496 100.715 17 100.504 17H99.7715C99.5762 17 99.4375 16.8359 99.3555 16.5078L97.9434 10.8887C97.873 10.6035 97.8223 10.3711 97.791 10.1914C97.7598 10.0078 97.7324 9.81836 97.709 9.62305H97.6973C97.6738 9.81836 97.6465 10.0078 97.6152 10.1914C97.584 10.3711 97.5332 10.6035 97.4629 10.8887L96.0508 16.5078C95.9688 16.8359 95.8301 17 95.6348 17H94.9023C94.6914 17 94.5469 16.8496 94.4688 16.5488L92.4531 8.94922ZM104.43 17C104.234 17 104.137 16.8926 104.137 16.6777V8.91992C104.137 8.70508 104.234 8.59766 104.43 8.59766H109.557C109.771 8.59766 109.879 8.68555 109.879 8.86133V9.29492C109.879 9.4707 109.771 9.55859 109.557 9.55859H105.262V12.1602H109.205C109.42 12.1602 109.527 12.248 109.527 12.4238V12.8574C109.527 13.0332 109.42 13.1211 109.205 13.1211H105.262V16.0391H109.732C109.947 16.0391 110.055 16.127 110.055 16.3027V16.7363C110.055 16.9121 109.947 17 109.732 17H104.43ZM111.871 17C111.676 17 111.578 16.8926 111.578 16.6777V8.91992C111.578 8.70508 111.676 8.59766 111.871 8.59766H114.701C115.83 8.59766 116.646 8.80859 117.15 9.23047C117.658 9.65234 117.912 10.209 117.912 10.9004C117.912 11.5098 117.707 12.0215 117.297 12.4355C116.891 12.8496 116.311 13.0879 115.557 13.1504V13.1621C115.955 13.459 116.219 13.6855 116.348 13.8418C116.477 13.9941 116.621 14.2012 116.781 14.4629L118.105 16.6133C118.266 16.8711 118.23 17 118 17H117.332C117.148 17 117.012 16.9238 116.922 16.7715L115.703 14.6797C115.527 14.3789 115.275 14.084 114.947 13.7949C114.619 13.5059 114.211 13.3613 113.723 13.3613H112.703V16.6777C112.703 16.8926 112.605 17 112.41 17H111.871ZM112.703 12.4004H114.396C115.158 12.4004 115.744 12.3008 116.154 12.1016C116.564 11.8984 116.77 11.4746 116.77 10.8301C116.77 10.3379 116.582 10.0039 116.207 9.82812C115.832 9.64844 115.322 9.55859 114.678 9.55859H112.703V12.4004Z" fill="black"/>
    <ellipse cx="15.5" cy="12" rx="9.5" ry="8" fill="#E96C12"/>
  </svg>

);

const HeartSvg: React.FC<React.SVGProps<SVGSVGElement>> = () => (
  <svg
    width="23"
    height="21"
    viewBox="0 0 23 21"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M21.2743 2.33413C20.6448 1.60193 19.8543 1.01306 18.9596 0.609951C18.0649 0.206838 17.0883 -0.0004864 16.1002 0.00291444C14.4096 -0.0462975 12.7637 0.529279 11.5011 1.61122C10.2385 0.529279 8.59252 -0.0462975 6.90191 0.00291444C5.91383 -0.0004864 4.93727 0.206838 4.04257 0.609951C3.14788 1.01306 2.35732 1.60193 1.72785 2.33413C0.632101 3.61193 -0.514239 5.92547 0.245772 9.69587C1.4588 15.7168 10.5548 20.6578 10.9388 20.8601C11.11 20.9518 11.3028 21 11.4988 21C11.6948 21 11.8875 20.9518 12.0587 20.8601C12.445 20.6534 21.541 15.7124 22.7518 9.69587C23.5164 5.92547 22.37 3.61193 21.2743 2.33413ZM20.4993 9.27583C19.6416 13.5326 13.4074 17.492 11.5011 18.6173C8.81516 17.0587 3.28927 13.1457 2.50856 9.27583C1.91872 6.35103 2.72587 4.65208 3.50773 3.74126C3.9212 3.26166 4.43995 2.87596 5.02678 2.61185C5.6136 2.34774 6.25396 2.21175 6.90191 2.21365C7.59396 2.16375 8.28765 2.2871 8.91534 2.57168C9.54304 2.85626 10.0833 3.29235 10.4835 3.83743C10.5822 4.012 10.7278 4.15794 10.9051 4.26003C11.0824 4.36212 11.2849 4.41662 11.4916 4.41787C11.6983 4.41911 11.9015 4.36704 12.0801 4.26709C12.2587 4.16714 12.4062 4.02296 12.5071 3.84959C12.9065 3.30026 13.448 2.86048 14.0781 2.57361C14.7081 2.28674 15.4051 2.16267 16.1002 2.21365C16.7495 2.21061 17.3915 2.34604 17.9798 2.6102C18.5681 2.87435 19.0881 3.26065 19.5025 3.74126C20.282 4.65208 21.0892 6.35103 20.4993 9.27583Z"
      fill="black"
    ></path>
  </svg>
);

const FileUploadSvg: React.FC<React.SVGProps<SVGSVGElement>> = () => (
    <svg width="50" height="50" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M26.7075 10.2925L19.7075 3.2925C19.6146 3.19967 19.5042 3.12605 19.3829 3.07586C19.2615 3.02568 19.1314 2.9999 19 3H7C6.46957 3 5.96086 3.21071 5.58579 3.58579C5.21071 3.96086 5 4.46957 5 5V27C5 27.5304 5.21071 28.0391 5.58579 28.4142C5.96086 28.7893 6.46957 29 7 29H25C25.5304 29 26.0391 28.7893 26.4142 28.4142C26.7893 28.0391 27 27.5304 27 27V11C27.0001 10.8686 26.9743 10.7385 26.9241 10.6172C26.8739 10.4958 26.8003 10.3854 26.7075 10.2925ZM19 20H17V22C17 22.2652 16.8946 22.5196 16.7071 22.7071C16.5196 22.8946 16.2652 23 16 23C15.7348 23 15.4804 22.8946 15.2929 22.7071C15.1054 22.5196 15 22.2652 15 22V20H13C12.7348 20 12.4804 19.8946 12.2929 19.7071C12.1054 19.5196 12 19.2652 12 19C12 18.7348 12.1054 18.4804 12.2929 18.2929C12.4804 18.1054 12.7348 18 13 18H15V16C15 15.7348 15.1054 15.4804 15.2929 15.2929C15.4804 15.1054 15.7348 15 16 15C16.2652 15 16.5196 15.1054 16.7071 15.2929C16.8946 15.4804 17 15.7348 17 16V18H19C19.2652 18 19.5196 18.1054 19.7071 18.2929C19.8946 18.4804 20 18.7348 20 19C20 19.2652 19.8946 19.5196 19.7071 19.7071C19.5196 19.8946 19.2652 20 19 20ZM19 11V5.41375L24.5863 11H19Z" fill="#0D99FF"/>
    </svg>

);

const ViewBoxSvg: React.FC<React.SVGProps<SVGSVGElement>> = () => (
  <svg
    width="21"
    height="23"
    viewBox="0 0 21 23"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M14.0625 10.6C14.0625 12.5883 12.4676 14.2 10.5 14.2C8.53243 14.2 6.9375 12.5883 6.9375 10.6M1 5.8H20M1 5.8V13C1 20.6402 2.33946 22 10.5 22C18.6605 22 20 20.6402 20 13V5.8M1 5.8L2.71856 2.32668C3.12087 1.5136 3.94324 1 4.84283 1H16.1571C17.0568 1 17.8791 1.5136 18.2814 2.32668L20 5.8"
      stroke="black"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    ></path>
  </svg>
);


const DropDownSvg: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 24.00 24.00"
    fill="white"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g id="SVGRepo_bgCarrier" strokeWidth="0" />
    <g
      id="SVGRepo_tracerCarrier"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <g id="SVGRepo_iconCarrier">
      {' '}
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M12.7071 14.7071C12.3166 15.0976 11.6834 15.0976 11.2929 14.7071L6.29289 9.70711C5.90237 9.31658 5.90237 8.68342 6.29289 8.29289C6.68342 7.90237 7.31658 7.90237 7.70711 8.29289L12 12.5858L16.2929 8.29289C16.6834 7.90237 17.3166 7.90237 17.7071 8.29289C18.0976 8.68342 18.0976 9.31658 17.7071 9.70711L12.7071 14.7071Z"
        fill="white"
      />{' '}
    </g>
  </svg>
);

export {
  PhoneSvg,
  SearchIconSvg,
  LogoSvg,
  HeartSvg,
  ViewBoxSvg,
  DropDownSvg,
  FileUploadSvg,
};
